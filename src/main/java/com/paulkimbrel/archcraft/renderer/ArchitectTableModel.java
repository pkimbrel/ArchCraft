// Date: 12/28/2014 11:20:04 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.paulkimbrel.archcraft.renderer;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ArchitectTableModel extends ModelBase
{
  //fields
    ModelRenderer Lower_Table;
    ModelRenderer Upper_Table;
    ModelRenderer Right_Leg_top;
    ModelRenderer Right_Leg_front;
    ModelRenderer Right_Leg_bottom;
    ModelRenderer Right_Leg_back;
    ModelRenderer Left_Leg_bottom;
    ModelRenderer Left_Leg_top;
    ModelRenderer Left_Leg_back;
    ModelRenderer Left_Leg_front;
    ModelRenderer Front_Right_Table_Support;
    ModelRenderer Front_Left_Table_Support;
    ModelRenderer Back_Right_Table_Support;
    ModelRenderer Back_Left_Table_Support;
  
  public ArchitectTableModel()
  {
    textureWidth = 32;
    textureHeight = 32;
    
      Lower_Table = new ModelRenderer(this, 0, 25);
      Lower_Table.addBox(0F, 0F, 0F, 10, 1, 6);
      Lower_Table.setRotationPoint(-5F, 18F, -1F);
      Lower_Table.setTextureSize(32, 32);
      Lower_Table.mirror = true;
      setRotation(Lower_Table, 0F, 0F, 0F);
      Upper_Table = new ModelRenderer(this, -3, 13);
      Upper_Table.addBox(0F, 0F, -1F, 12, 1, 11);
      Upper_Table.setRotationPoint(-6F, 14F, -4F);
      Upper_Table.setTextureSize(32, 32);
      Upper_Table.mirror = true;
      setRotation(Upper_Table, 0.5235988F, 0F, 0F);
      Right_Leg_top = new ModelRenderer(this, 14, 0);
      Right_Leg_top.addBox(0F, 0F, 0F, 1, 1, 8);
      Right_Leg_top.setRotationPoint(5F, 18F, -3F);
      Right_Leg_top.setTextureSize(32, 32);
      Right_Leg_top.mirror = true;
      setRotation(Right_Leg_top, 0F, 0F, 0F);
      Right_Leg_front = new ModelRenderer(this, 0, 0);
      Right_Leg_front.addBox(0F, 0F, 0F, 1, 4, 1);
      Right_Leg_front.setRotationPoint(5F, 19F, -3F);
      Right_Leg_front.setTextureSize(32, 32);
      Right_Leg_front.mirror = true;
      setRotation(Right_Leg_front, 0F, 0F, 0F);
      Right_Leg_bottom = new ModelRenderer(this, 0, 0);
      Right_Leg_bottom.addBox(0F, 0F, 0F, 1, 1, 8);
      Right_Leg_bottom.setRotationPoint(5F, 23F, -3F);
      Right_Leg_bottom.setTextureSize(32, 32);
      Right_Leg_bottom.mirror = true;
      setRotation(Right_Leg_bottom, 0F, 0F, 0F);
      Right_Leg_back = new ModelRenderer(this, 0, 0);
      Right_Leg_back.addBox(0F, 0F, 0F, 1, 4, 1);
      Right_Leg_back.setRotationPoint(5F, 19F, 4F);
      Right_Leg_back.setTextureSize(32, 32);
      Right_Leg_back.mirror = true;
      setRotation(Right_Leg_back, 0F, 0F, 0F);
      Left_Leg_bottom = new ModelRenderer(this, 0, 0);
      Left_Leg_bottom.addBox(0F, 0F, 0F, 1, 1, 8);
      Left_Leg_bottom.setRotationPoint(-6F, 23F, -3F);
      Left_Leg_bottom.setTextureSize(32, 32);
      Left_Leg_bottom.mirror = true;
      setRotation(Left_Leg_bottom, 0F, 0F, 0F);
      Left_Leg_top = new ModelRenderer(this, 0, 0);
      Left_Leg_top.addBox(0F, 0F, 0F, 1, 1, 8);
      Left_Leg_top.setRotationPoint(-6F, 18F, -3F);
      Left_Leg_top.setTextureSize(32, 32);
      Left_Leg_top.mirror = true;
      setRotation(Left_Leg_top, 0F, 0F, 0F);
      Left_Leg_back = new ModelRenderer(this, 0, 0);
      Left_Leg_back.addBox(0F, 0F, 0F, 1, 4, 1);
      Left_Leg_back.setRotationPoint(-6F, 19F, 4F);
      Left_Leg_back.setTextureSize(32, 32);
      Left_Leg_back.mirror = true;
      setRotation(Left_Leg_back, 0F, 0F, 0F);
      Left_Leg_front = new ModelRenderer(this, 0, 0);
      Left_Leg_front.addBox(0F, 0F, 0F, 1, 4, 1);
      Left_Leg_front.setRotationPoint(-6F, 19F, -3F);
      Left_Leg_front.setTextureSize(32, 32);
      Left_Leg_front.mirror = true;
      setRotation(Left_Leg_front, 0F, 0F, 0F);
      Front_Right_Table_Support = new ModelRenderer(this, 0, 0);
      Front_Right_Table_Support.addBox(0F, 0F, 0F, 1, 4, 1);
      Front_Right_Table_Support.setRotationPoint(5F, 14F, -3F);
      Front_Right_Table_Support.setTextureSize(32, 32);
      Front_Right_Table_Support.mirror = true;
      setRotation(Front_Right_Table_Support, 0F, 0F, 0F);
      Front_Left_Table_Support = new ModelRenderer(this, 0, 0);
      Front_Left_Table_Support.addBox(0F, 0F, 0F, 1, 4, 1);
      Front_Left_Table_Support.setRotationPoint(-6F, 14F, -3F);
      Front_Left_Table_Support.setTextureSize(32, 32);
      Front_Left_Table_Support.mirror = true;
      setRotation(Front_Left_Table_Support, 0F, 0F, 0F);
      Back_Right_Table_Support = new ModelRenderer(this, 0, 0);
      Back_Right_Table_Support.addBox(0F, 0F, 0F, 1, 8, 1);
      Back_Right_Table_Support.setRotationPoint(5F, 10F, 4F);
      Back_Right_Table_Support.setTextureSize(32, 32);
      Back_Right_Table_Support.mirror = true;
      setRotation(Back_Right_Table_Support, 0F, 0F, 0F);
      Back_Left_Table_Support = new ModelRenderer(this, 0, 0);
      Back_Left_Table_Support.addBox(0F, 0F, 0F, 1, 10, 1);
      Back_Left_Table_Support.setRotationPoint(-6F, 10F, 4F);
      Back_Left_Table_Support.setTextureSize(32, 32);
      Back_Left_Table_Support.mirror = true;
      setRotation(Back_Left_Table_Support, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5,entity);
    Lower_Table.render(f5);
    Upper_Table.render(f5);
    Right_Leg_top.render(f5);
    Right_Leg_front.render(f5);
    Right_Leg_bottom.render(f5);
    Right_Leg_back.render(f5);
    Left_Leg_bottom.render(f5);
    Left_Leg_top.render(f5);
    Left_Leg_back.render(f5);
    Left_Leg_front.render(f5);
    Front_Right_Table_Support.render(f5);
    Front_Left_Table_Support.render(f5);
    Back_Right_Table_Support.render(f5);
    Back_Left_Table_Support.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
